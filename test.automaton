State 0:
input' -> . input [ # ]
-- On input shift to state 1
-- On OBRACE reduce production input -> 
-- On NUMBER reduce production input -> 
-- On NEWLINE reduce production input -> 
-- On # reduce production input -> 

State 1:
input' -> input . [ # ]
input -> input . line [ OBRACE NUMBER NEWLINE # ]
-- On OBRACE shift to state 2
-- On NUMBER shift to state 3
-- On NEWLINE shift to state 18
-- On term shift to state 4
-- On line shift to state 19
-- On factor shift to state 11
-- On exp shift to state 20
-- On # accept input

State 2:
factor -> OBRACE . exp CBRACE [ SUB NEWLINE MUL MOD DIV CBRACE ADD ]
-- On OBRACE shift to state 2
-- On NUMBER shift to state 3
-- On term shift to state 4
-- On factor shift to state 11
-- On exp shift to state 12

State 3:
factor -> NUMBER . [ SUB NEWLINE MUL MOD DIV CBRACE ADD ]
-- On SUB reduce production factor -> NUMBER 
-- On NEWLINE reduce production factor -> NUMBER 
-- On MUL reduce production factor -> NUMBER 
-- On MOD reduce production factor -> NUMBER 
-- On DIV reduce production factor -> NUMBER 
-- On CBRACE reduce production factor -> NUMBER 
-- On ADD reduce production factor -> NUMBER 

State 4:
exp -> term . [ SUB NEWLINE CBRACE ADD ]
term -> term . MUL factor [ SUB NEWLINE MUL MOD DIV CBRACE ADD ]
term -> term . DIV factor [ SUB NEWLINE MUL MOD DIV CBRACE ADD ]
term -> term . MOD factor [ SUB NEWLINE MUL MOD DIV CBRACE ADD ]
-- On MUL shift to state 5
-- On MOD shift to state 7
-- On DIV shift to state 9
-- On SUB reduce production exp -> term 
-- On NEWLINE reduce production exp -> term 
-- On CBRACE reduce production exp -> term 
-- On ADD reduce production exp -> term 

State 5:
term -> term MUL . factor [ SUB NEWLINE MUL MOD DIV CBRACE ADD ]
-- On OBRACE shift to state 2
-- On NUMBER shift to state 3
-- On factor shift to state 6

State 6:
term -> term MUL factor . [ SUB NEWLINE MUL MOD DIV CBRACE ADD ]
-- On SUB reduce production term -> term MUL factor 
-- On NEWLINE reduce production term -> term MUL factor 
-- On MUL reduce production term -> term MUL factor 
-- On MOD reduce production term -> term MUL factor 
-- On DIV reduce production term -> term MUL factor 
-- On CBRACE reduce production term -> term MUL factor 
-- On ADD reduce production term -> term MUL factor 

State 7:
term -> term MOD . factor [ SUB NEWLINE MUL MOD DIV CBRACE ADD ]
-- On OBRACE shift to state 2
-- On NUMBER shift to state 3
-- On factor shift to state 8

State 8:
term -> term MOD factor . [ SUB NEWLINE MUL MOD DIV CBRACE ADD ]
-- On SUB reduce production term -> term MOD factor 
-- On NEWLINE reduce production term -> term MOD factor 
-- On MUL reduce production term -> term MOD factor 
-- On MOD reduce production term -> term MOD factor 
-- On DIV reduce production term -> term MOD factor 
-- On CBRACE reduce production term -> term MOD factor 
-- On ADD reduce production term -> term MOD factor 

State 9:
term -> term DIV . factor [ SUB NEWLINE MUL MOD DIV CBRACE ADD ]
-- On OBRACE shift to state 2
-- On NUMBER shift to state 3
-- On factor shift to state 10

State 10:
term -> term DIV factor . [ SUB NEWLINE MUL MOD DIV CBRACE ADD ]
-- On SUB reduce production term -> term DIV factor 
-- On NEWLINE reduce production term -> term DIV factor 
-- On MUL reduce production term -> term DIV factor 
-- On MOD reduce production term -> term DIV factor 
-- On DIV reduce production term -> term DIV factor 
-- On CBRACE reduce production term -> term DIV factor 
-- On ADD reduce production term -> term DIV factor 

State 11:
term -> factor . [ SUB NEWLINE MUL MOD DIV CBRACE ADD ]
-- On SUB reduce production term -> factor 
-- On NEWLINE reduce production term -> factor 
-- On MUL reduce production term -> factor 
-- On MOD reduce production term -> factor 
-- On DIV reduce production term -> factor 
-- On CBRACE reduce production term -> factor 
-- On ADD reduce production term -> factor 

State 12:
exp -> exp . SUB term [ SUB CBRACE ADD ]
exp -> exp . ADD term [ SUB CBRACE ADD ]
factor -> OBRACE exp . CBRACE [ SUB NEWLINE MUL MOD DIV CBRACE ADD ]
-- On SUB shift to state 13
-- On CBRACE shift to state 15
-- On ADD shift to state 16

State 13:
exp -> exp SUB . term [ SUB NEWLINE CBRACE ADD ]
-- On OBRACE shift to state 2
-- On NUMBER shift to state 3
-- On term shift to state 14
-- On factor shift to state 11

State 14:
exp -> exp SUB term . [ SUB NEWLINE CBRACE ADD ]
term -> term . MUL factor [ SUB NEWLINE MUL MOD DIV CBRACE ADD ]
term -> term . DIV factor [ SUB NEWLINE MUL MOD DIV CBRACE ADD ]
term -> term . MOD factor [ SUB NEWLINE MUL MOD DIV CBRACE ADD ]
-- On MUL shift to state 5
-- On MOD shift to state 7
-- On DIV shift to state 9
-- On SUB reduce production exp -> exp SUB term 
-- On NEWLINE reduce production exp -> exp SUB term 
-- On CBRACE reduce production exp -> exp SUB term 
-- On ADD reduce production exp -> exp SUB term 

State 15:
factor -> OBRACE exp CBRACE . [ SUB NEWLINE MUL MOD DIV CBRACE ADD ]
-- On SUB reduce production factor -> OBRACE exp CBRACE 
-- On NEWLINE reduce production factor -> OBRACE exp CBRACE 
-- On MUL reduce production factor -> OBRACE exp CBRACE 
-- On MOD reduce production factor -> OBRACE exp CBRACE 
-- On DIV reduce production factor -> OBRACE exp CBRACE 
-- On CBRACE reduce production factor -> OBRACE exp CBRACE 
-- On ADD reduce production factor -> OBRACE exp CBRACE 

State 16:
exp -> exp ADD . term [ SUB NEWLINE CBRACE ADD ]
-- On OBRACE shift to state 2
-- On NUMBER shift to state 3
-- On term shift to state 17
-- On factor shift to state 11

State 17:
exp -> exp ADD term . [ SUB NEWLINE CBRACE ADD ]
term -> term . MUL factor [ SUB NEWLINE MUL MOD DIV CBRACE ADD ]
term -> term . DIV factor [ SUB NEWLINE MUL MOD DIV CBRACE ADD ]
term -> term . MOD factor [ SUB NEWLINE MUL MOD DIV CBRACE ADD ]
-- On MUL shift to state 5
-- On MOD shift to state 7
-- On DIV shift to state 9
-- On SUB reduce production exp -> exp ADD term 
-- On NEWLINE reduce production exp -> exp ADD term 
-- On CBRACE reduce production exp -> exp ADD term 
-- On ADD reduce production exp -> exp ADD term 

State 18:
line -> NEWLINE . [ OBRACE NUMBER NEWLINE # ]
-- On OBRACE reduce production line -> NEWLINE 
-- On NUMBER reduce production line -> NEWLINE 
-- On NEWLINE reduce production line -> NEWLINE 
-- On # reduce production line -> NEWLINE 

State 19:
input -> input line . [ OBRACE NUMBER NEWLINE # ]
-- On OBRACE reduce production input -> input line 
-- On NUMBER reduce production input -> input line 
-- On NEWLINE reduce production input -> input line 
-- On # reduce production input -> input line 

State 20:
exp -> exp . SUB term [ SUB NEWLINE ADD ]
exp -> exp . ADD term [ SUB NEWLINE ADD ]
line -> exp . NEWLINE [ OBRACE NUMBER NEWLINE # ]
-- On SUB shift to state 13
-- On NEWLINE shift to state 21
-- On ADD shift to state 16

State 21:
line -> exp NEWLINE . [ OBRACE NUMBER NEWLINE # ]
-- On OBRACE reduce production line -> exp NEWLINE 
-- On NUMBER reduce production line -> exp NEWLINE 
-- On NEWLINE reduce production line -> exp NEWLINE 
-- On # reduce production line -> exp NEWLINE 

State 0 has an end-of-stream conflict. There is a tension between
(1) reducing production input -> 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of OBRACE NUMBER NEWLINE,
which would require some other action.

State 1 has an end-of-stream conflict. There is a tension between
(1) accepting input
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of OBRACE NUMBER NEWLINE,
which would require some other action.

State 18 has an end-of-stream conflict. There is a tension between
(1) reducing production line -> NEWLINE 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of OBRACE NUMBER NEWLINE,
which would require some other action.

State 19 has an end-of-stream conflict. There is a tension between
(1) reducing production input -> input line 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of OBRACE NUMBER NEWLINE,
which would require some other action.

State 21 has an end-of-stream conflict. There is a tension between
(1) reducing production line -> exp NEWLINE 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of OBRACE NUMBER NEWLINE,
which would require some other action.

